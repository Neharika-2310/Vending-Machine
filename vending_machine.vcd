$date
	Tue Sep 09 23:18:18 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_vending_machine $end
$var wire 1 ! refund $end
$var wire 1 " low_stock $end
$var wire 1 # dispense_C $end
$var wire 1 $ dispense_B $end
$var wire 1 % dispense_A $end
$var wire 8 & change_out [7:0] $end
$var reg 1 ' cancel $end
$var reg 1 ( clk $end
$var reg 2 ) coin_in [1:0] $end
$var reg 1 * reset $end
$var reg 2 + select_item [1:0] $end
$scope module dut $end
$var wire 1 ' cancel $end
$var wire 1 ( clk $end
$var wire 2 , coin_in [1:0] $end
$var wire 1 * reset $end
$var wire 2 - select_item [1:0] $end
$var parameter 3 . CHECK_BAL $end
$var parameter 3 / COIN_ACCEPT $end
$var parameter 3 0 DISPENSE $end
$var parameter 3 1 IDLE $end
$var parameter 32 2 PRICE_A $end
$var parameter 32 3 PRICE_B $end
$var parameter 32 4 PRICE_C $end
$var parameter 3 5 REFUND_STATE $end
$var parameter 3 6 SELECTION $end
$var reg 8 7 balance [7:0] $end
$var reg 8 8 change_out [7:0] $end
$var reg 3 9 current_state [2:0] $end
$var reg 1 % dispense_A $end
$var reg 1 $ dispense_B $end
$var reg 1 # dispense_C $end
$var reg 2 : item_selected [1:0] $end
$var reg 1 " low_stock $end
$var reg 3 ; next_state [2:0] $end
$var reg 8 < price [7:0] $end
$var reg 1 ! refund $end
$var reg 4 = stock_A [3:0] $end
$var reg 4 > stock_B [3:0] $end
$var reg 4 ? stock_C [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 6
b101 5
b11001 4
b10100 3
b1111 2
b0 1
b100 0
b1 /
b11 .
$end
#0
$dumpvars
b11 ?
b11 >
b11 =
b0 <
b0 ;
bx :
b0 9
b0 8
b0 7
b0 -
b0 ,
b0 +
1*
b0 )
0(
0'
b0 &
0%
0$
0#
0"
0!
$end
#5000
1(
#10000
b1 ;
0(
b10 )
b10 ,
0*
#15000
b1010 7
b1 9
1(
#20000
0(
b1 )
b1 ,
#25000
b1111 7
1(
#30000
b10 ;
0(
b1 +
b1 -
b0 )
b0 ,
#35000
b11 ;
b1 :
b1111 <
b10 9
1(
#40000
b0 :
b0 <
b11 ;
0(
b0 +
b0 -
#45000
b100 ;
b11 9
1(
#50000
0(
#55000
b0 ;
b1111 &
b1111 8
b100 9
1(
#60000
b0 ;
b1111 &
b1111 8
0(
b11 )
b11 ,
#65000
b1 ;
b0 &
b0 8
b100011 7
b0 9
1(
#70000
b1 ;
0(
b1 )
b1 ,
#75000
b101000 7
b1 9
1(
#80000
b10 ;
0(
b10 +
b10 -
b0 )
b0 ,
#85000
b11 ;
b10 :
b10100 <
b10 9
1(
#90000
b0 :
b0 <
b11 ;
0(
b0 +
b0 -
#95000
b100 ;
b11 9
1(
#100000
0(
#105000
b0 ;
b101000 &
b101000 8
b100 9
1(
#110000
b0 ;
b101000 &
b101000 8
0(
b1 )
b1 ,
#115000
b1 ;
b0 &
b0 8
b101101 7
b0 9
1(
#120000
b1 ;
0(
b10 )
b10 ,
#125000
b110111 7
b1 9
1(
#130000
b101 ;
0(
1'
b0 )
b0 ,
#135000
b0 ;
b110111 &
b110111 8
1!
b101 9
1(
#140000
b0 ;
b110111 &
b110111 8
1!
0(
0'
#145000
b0 &
b0 8
0!
b0 7
b0 9
1(
#150000
0(
#155000
1(
#160000
b1 ;
0(
b11 )
b11 ,
#165000
b10100 7
b1 9
1(
#170000
0(
b1 )
b1 ,
#175000
b11001 7
1(
#180000
b10 ;
0(
b11 +
b11 -
b0 )
b0 ,
#185000
b11 ;
b11 :
b11001 <
b10 9
1(
#190000
b0 :
b0 <
b11 ;
0(
b0 +
b0 -
#195000
b100 ;
b11 9
1(
#200000
0(
#205000
b0 ;
b11001 &
b11001 8
b100 9
1(
#210000
b0 ;
b11001 &
b11001 8
0(
b11 )
b11 ,
#215000
b1 ;
b0 &
b0 8
b101101 7
b0 9
1(
#220000
b1 ;
0(
b1 )
b1 ,
#225000
b110010 7
b1 9
1(
#230000
b10 ;
0(
b11 +
b11 -
b0 )
b0 ,
#235000
b11 ;
b11 :
b11001 <
b10 9
1(
#240000
b0 :
b0 <
b11 ;
0(
b0 +
b0 -
#245000
b100 ;
b11 9
1(
#250000
0(
#255000
b0 ;
b110010 &
b110010 8
b100 9
1(
#260000
b0 ;
b110010 &
b110010 8
0(
b11 )
b11 ,
#265000
b1 ;
b0 &
b0 8
b1000110 7
b0 9
1(
#270000
b1 ;
0(
b1 )
b1 ,
#275000
b1001011 7
b1 9
1(
#280000
b10 ;
0(
b11 +
b11 -
b0 )
b0 ,
#285000
b11 ;
b11 :
b11001 <
b10 9
1(
#290000
b0 :
b0 <
b11 ;
0(
b0 +
b0 -
#295000
b100 ;
b11 9
1(
#300000
0(
#305000
b0 ;
b1001011 &
b1001011 8
b100 9
1(
#310000
0(
